// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  years          Year[]
}

model Year {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  yearName       String?
  yearTotalPrice Int?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  months Month[]
  user   User    @relation(fields: [userId], references: [id])
  userId String  @db.ObjectId
}

model Month {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  monthName       String?
  monthTotalPrice Int?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  days Day[]

  year   Year   @relation(fields: [yearId], references: [id])
  yearId String @db.ObjectId
}

model Day {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  dayName       String?
  dayTotalPrice Int?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  records Record[]
  month   Month    @relation(fields: [monthId], references: [id])
  monthId String   @db.ObjectId
}

model Record {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  detail    String?
  price     Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  day   Day    @relation(fields: [dayId], references: [id])
  dayId         String @db.ObjectId
}

